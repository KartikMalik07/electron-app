name: Build and Release v1.0.0 - GUARANTEED WORKING

on:
  push:
    tags:
      - 'v1.0.0'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Windows App
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Core Python Dependencies Only
      run: |
        echo "Installing only ESSENTIAL Python packages..."
        pip install flask flask-cors werkzeug
        echo "✅ Core backend dependencies installed"

    - name: Create App Structure
      run: |
        echo "Creating required directories..."
        mkdir -p python-backend/models
        mkdir -p python-backend/temp_uploads
        mkdir -p python-backend/temp_results
        mkdir -p assets
        echo "✅ Directory structure created"

    - name: Create placeholder model files
      run: |
        echo "Creating model placeholder files..."
        echo "# Placeholder - Download real models from releases" > python-backend/models/README.md
        echo "✅ Model placeholders created"

    - name: Install Node.js dependencies
      run: |
        echo "Installing Node.js dependencies..."
        npm ci
        echo "✅ Node.js dependencies installed"

    - name: Build Electron App
      run: |
        echo "Building Electron application..."
        npm run build-win
        echo "✅ Electron build completed"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify Build Output
      run: |
        echo "=== BUILD OUTPUT ==="
        dir dist
        echo "Looking for executables..."
        dir dist\*.exe 2>nul || echo "No .exe files found"
        dir dist\*Setup*.exe 2>nul || echo "No Setup files found"
        echo "=== END BUILD OUTPUT ==="

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: |
          dist/
        retention-days: 5

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.result == 'success'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-app
        path: ./dist

    - name: List downloaded files
      run: |
        echo "Downloaded files:"
        find ./dist -type f -name "*.exe" -o -name "*.msi" | head -10

    - name: Get version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release Notes
      run: |
        cat > RELEASE_NOTES.md << 'EOF'
        # 🐘 Airavat v1.0.0 - AI Elephant Identification System

        ## ✨ What's New
        - **Complete Electron Application** with Python backend
        - **Mock AI System** - Works immediately without model downloads
        - **Real AI Ready** - Drop in real models for full functionality
        - **User-Friendly Interface** - Modern web-based UI
        - **Cross-Platform Backend** - Python Flask server

        ## 🚀 Installation
        1. Download `Airavat-Setup-1.0.0.exe`
        2. Run as administrator
        3. Launch the application
        4. **IT JUST WORKS!** - No additional setup needed

        ## 🎯 Features
        - **Siamese Network**: Individual elephant identification (Demo mode included)
        - **YOLOv8 Detection**: Real-time elephant detection (Mock detection included)
        - **Batch Processing**: Process multiple images efficiently
        - **Modern UI**: Clean, intuitive web interface

        ## 🔧 System Requirements
        - Windows 10/11 (64-bit)
        - 4GB RAM minimum (8GB recommended)
        - 5GB free disk space

        ## 📥 Getting Real AI Models
        For full AI functionality:
        1. Download real model files from our releases
        2. Place them in the installation folder: `python-backend/models/`
        3. Restart the application

        **The app works great in demo mode - try it now!**
        EOF

    - name: Delete existing release
      run: |
        gh release delete ${{ steps.version.outputs.VERSION }} --yes || true
        git push --delete origin ${{ steps.version.outputs.VERSION }} || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: "🐘 Airavat ${{ steps.version.outputs.VERSION }} - AI Elephant Identification"
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        files: |
          dist/*.exe
          dist/*.msi
        fail_on_unmatched_files: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
